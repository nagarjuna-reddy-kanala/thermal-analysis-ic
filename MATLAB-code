% Thermal Analysis and Hotspot Detection in ICs

% Grid size (represents the chip layout)
rows = 50; % number of vertical cells
cols = 50; % number of horizontal cells

% Initialize temperature matrix (ambient temp = 25°C)
T = 25 * ones(rows, cols);

% Heat source locations and power (can be customized)
heat_sources = [15, 20; 25, 30; 35, 15]; % [row, col] of sources
power = [80, 100, 70]; % heat units for each source

% Simulation parameters
num_iter = 500;         % number of iterations
alpha = 0.1;            % thermal diffusivity
threshold = 60;         % hotspot threshold in °C

% Apply heat sources
for i = 1:length(heat_sources)
    T(heat_sources(i,1), heat_sources(i,2)) = power(i);
end

% Heat diffusion simulation
for step = 1:num_iter
    T_new = T;
    for r = 2:rows-1
        for c = 2:cols-1
            % Discrete heat diffusion equation
            T_new(r,c) = T(r,c) + alpha * ( ...
                T(r+1,c) + T(r-1,c) + T(r,c+1) + T(r,c-1) - 4*T(r,c));
        end
    end
    
    % Keep heat sources constant
    for i = 1:length(heat_sources)
        T_new(heat_sources(i,1), heat_sources(i,2)) = power(i);
    end
    
    T = T_new; % update temperature matrix
end

% Plot final temperature distribution
figure;
imagesc(T);
colorbar;
title('Final Temperature Distribution on IC');
xlabel('IC Width');
ylabel('IC Height');
colormap hot;

% Detect and highlight hotspots
hotspots = T > threshold;
num_hotspots = sum(hotspots(:));

% Overlay hotspots
hold on;
[row_hs, col_hs] = find(hotspots);
plot(col_hs, row_hs, 'bs', 'MarkerSize', 5, 'LineWidth', 1.5);
hold off;

fprintf('Total number of hotspots detected: %d\n', num_hotspots);

Total number of hotspots detected: 15
